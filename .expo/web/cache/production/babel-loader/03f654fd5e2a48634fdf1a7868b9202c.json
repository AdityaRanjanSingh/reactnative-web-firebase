{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Button from\"react-native-web/dist/exports/Button\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import FlatList from\"react-native-web/dist/exports/FlatList\";import GoalItem from\"./components/GoalItem\";import GoalInput from\"./components/GoalInput\";import{storeTodoNote,getTodos}from\"./firebase\";export default function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),courseGoals=_useState2[0],setCourseGoals=_useState2[1];var addGoalHandler=function addGoalHandler(goalTitle){setCourseGoals(function(currentGoals){return[].concat(_toConsumableArray(currentGoals),[{key:Math.random().toString(),value:goalTitle}]);});storeTodoNote({key:Math.random().toString(),value:goalTitle});};var showTodo=function showTodo(a){setCourseGoals(a);};getTodos(showTodo);var removeGoalHandler=function removeGoalHandler(goalId){setCourseGoals(function(currentGoals){return currentGoals.filter(function(goal){return goal.key!==goalId;});});};return React.createElement(View,{style:styles.screen},React.createElement(GoalInput,{addGoal:addGoalHandler}),React.createElement(FlatList,{keyExtractor:function keyExtractor(item,index){return item.key;},data:courseGoals,renderItem:function renderItem(itemData){return React.createElement(GoalItem,{id:itemData.item.key,onDelete:removeGoalHandler,title:itemData.item.value});}}));}var styles=StyleSheet.create({screen:{padding:50}});","map":{"version":3,"sources":["/Users/adityaranjansingh/Documents/Projects/rn-guide/App.js"],"names":["React","useState","GoalItem","GoalInput","storeTodoNote","getTodos","App","courseGoals","setCourseGoals","addGoalHandler","goalTitle","currentGoals","key","Math","random","toString","value","showTodo","a","removeGoalHandler","goalId","filter","goal","styles","screen","item","index","itemData","StyleSheet","create","padding"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,iaAUA,MAAOC,CAAAA,QAAP,6BACA,MAAOC,CAAAA,SAAP,8BACA,OAASC,aAAT,CAAwBC,QAAxB,kBACA,cAAe,SAASC,CAAAA,GAAT,EAAe,eACUL,QAAQ,CAAC,EAAD,CADlB,wCACrBM,WADqB,eACRC,cADQ,eAG5B,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,SAAD,CAAe,CACpCF,cAAc,CAAC,SAACG,YAAD,qCACVA,YADU,GAEb,CAAEC,GAAG,CAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAP,CAAiCC,KAAK,CAAEN,SAAxC,CAFa,IAAD,CAAd,CAIAN,aAAa,CAAC,CAAEQ,GAAG,CAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAP,CAAiCC,KAAK,CAAEN,SAAxC,CAAD,CAAb,CACD,CAND,CAOA,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBV,cAAc,CAACU,CAAD,CAAd,CACD,CAFD,CAGAb,QAAQ,CAACY,QAAD,CAAR,CACA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,MAAD,CAAY,CACpCZ,cAAc,CAAC,SAACG,YAAD,CAAkB,CAC/B,MAAOA,CAAAA,YAAY,CAACU,MAAb,CAAoB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACV,GAAL,GAAaQ,MAAvB,EAApB,CAAP,CACD,CAFa,CAAd,CAGD,CAJD,CAKA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEG,MAAM,CAACC,MAApB,EACE,oBAAC,SAAD,EAAW,OAAO,CAAEf,cAApB,EADF,CAEE,oBAAC,QAAD,EACE,YAAY,CAAE,sBAACgB,IAAD,CAAOC,KAAP,QAAiBD,CAAAA,IAAI,CAACb,GAAtB,EADhB,CAEE,IAAI,CAAEL,WAFR,CAGE,UAAU,CAAE,oBAACoB,QAAD,QACV,qBAAC,QAAD,EACE,EAAE,CAAEA,QAAQ,CAACF,IAAT,CAAcb,GADpB,CAEE,QAAQ,CAAEO,iBAFZ,CAGE,KAAK,CAAEQ,QAAQ,CAACF,IAAT,CAAcT,KAHvB,EADU,EAHd,EAFF,CADF,CAgBD,CAED,GAAMO,CAAAA,MAAM,CAAGK,UAAU,CAACC,MAAX,CAAkB,CAC/BL,MAAM,CAAE,CAAEM,OAAO,CAAE,EAAX,CADuB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  ScrollView,\n  FlatList,\n} from \"react-native\";\nimport GoalItem from \"./components/GoalItem\";\nimport GoalInput from \"./components/GoalInput\";\nimport { storeTodoNote, getTodos } from \"./firebase\";\nexport default function App() {\n  const [courseGoals, setCourseGoals] = useState([]);\n\n  const addGoalHandler = (goalTitle) => {\n    setCourseGoals((currentGoals) => [\n      ...currentGoals,\n      { key: Math.random().toString(), value: goalTitle },\n    ]);\n    storeTodoNote({ key: Math.random().toString(), value: goalTitle });\n  };\n  const showTodo = (a) => {\n    setCourseGoals(a);\n  };\n  getTodos(showTodo);\n  const removeGoalHandler = (goalId) => {\n    setCourseGoals((currentGoals) => {\n      return currentGoals.filter((goal) => goal.key !== goalId);\n    });\n  };\n  return (\n    <View style={styles.screen}>\n      <GoalInput addGoal={addGoalHandler} />\n      <FlatList\n        keyExtractor={(item, index) => item.key}\n        data={courseGoals}\n        renderItem={(itemData) => (\n          <GoalItem\n            id={itemData.item.key}\n            onDelete={removeGoalHandler}\n            title={itemData.item.value}\n          />\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: { padding: 50 },\n});\n"]},"metadata":{},"sourceType":"module"}